<?php
/**
 * ConsignmentSummary
 *
 * PHP version 5
 *
 * @category Class
 * @package  ChrisHemmings\Electio
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Electio API
 *
 * A minimal Electio client
 *
 * OpenAPI spec version: 1.0.6
 * Contact: chris@hemmin.gs
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace ChrisHemmings\Electio\Client\Model;

use \ArrayAccess;
use \ChrisHemmings\Electio\ObjectSerializer;

/**
 * ConsignmentSummary Class Doc Comment
 *
 * @category Class
 * @package  ChrisHemmings\Electio
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ConsignmentSummary implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ConsignmentSummary';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'reference' => 'string',
        'consignment_reference_provided_by_customer' => 'string',
        'date_created' => '\DateTime',
        'state' => 'string',
        'shipping_date' => '\DateTime',
        'mpd_carrier_reference' => 'string',
        'mpd_carrier_service_reference' => 'string',
        'allocation_date' => '\DateTime',
        'shipped_date' => '\DateTime',
        'source' => 'string',
        'mpd_carrier_service_name' => 'string',
        'mpd_carrier_service_group_name' => 'string',
        'mpd_carrier_service_group_reference' => 'string',
        'destination_address_line1' => 'string',
        'destination_address_town' => 'string',
        'destination_address_postcode' => 'string',
        'destination_address_country' => 'string',
        'destination_shipping_location_reference' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'reference' => null,
        'consignment_reference_provided_by_customer' => null,
        'date_created' => 'date-time',
        'state' => null,
        'shipping_date' => 'date-time',
        'mpd_carrier_reference' => null,
        'mpd_carrier_service_reference' => null,
        'allocation_date' => 'date-time',
        'shipped_date' => 'date-time',
        'source' => null,
        'mpd_carrier_service_name' => null,
        'mpd_carrier_service_group_name' => null,
        'mpd_carrier_service_group_reference' => null,
        'destination_address_line1' => null,
        'destination_address_town' => null,
        'destination_address_postcode' => null,
        'destination_address_country' => null,
        'destination_shipping_location_reference' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'reference' => 'Reference',
        'consignment_reference_provided_by_customer' => 'ConsignmentReferenceProvidedByCustomer',
        'date_created' => 'DateCreated',
        'state' => 'State',
        'shipping_date' => 'ShippingDate',
        'mpd_carrier_reference' => 'MpdCarrierReference',
        'mpd_carrier_service_reference' => 'MpdCarrierServiceReference',
        'allocation_date' => 'AllocationDate',
        'shipped_date' => 'ShippedDate',
        'source' => 'Source',
        'mpd_carrier_service_name' => 'MpdCarrierServiceName',
        'mpd_carrier_service_group_name' => 'MpdCarrierServiceGroupName',
        'mpd_carrier_service_group_reference' => 'MpdCarrierServiceGroupReference',
        'destination_address_line1' => 'DestinationAddressLine1',
        'destination_address_town' => 'DestinationAddressTown',
        'destination_address_postcode' => 'DestinationAddressPostcode',
        'destination_address_country' => 'DestinationAddressCountry',
        'destination_shipping_location_reference' => 'DestinationShippingLocationReference'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'reference' => 'setReference',
        'consignment_reference_provided_by_customer' => 'setConsignmentReferenceProvidedByCustomer',
        'date_created' => 'setDateCreated',
        'state' => 'setState',
        'shipping_date' => 'setShippingDate',
        'mpd_carrier_reference' => 'setMpdCarrierReference',
        'mpd_carrier_service_reference' => 'setMpdCarrierServiceReference',
        'allocation_date' => 'setAllocationDate',
        'shipped_date' => 'setShippedDate',
        'source' => 'setSource',
        'mpd_carrier_service_name' => 'setMpdCarrierServiceName',
        'mpd_carrier_service_group_name' => 'setMpdCarrierServiceGroupName',
        'mpd_carrier_service_group_reference' => 'setMpdCarrierServiceGroupReference',
        'destination_address_line1' => 'setDestinationAddressLine1',
        'destination_address_town' => 'setDestinationAddressTown',
        'destination_address_postcode' => 'setDestinationAddressPostcode',
        'destination_address_country' => 'setDestinationAddressCountry',
        'destination_shipping_location_reference' => 'setDestinationShippingLocationReference'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'reference' => 'getReference',
        'consignment_reference_provided_by_customer' => 'getConsignmentReferenceProvidedByCustomer',
        'date_created' => 'getDateCreated',
        'state' => 'getState',
        'shipping_date' => 'getShippingDate',
        'mpd_carrier_reference' => 'getMpdCarrierReference',
        'mpd_carrier_service_reference' => 'getMpdCarrierServiceReference',
        'allocation_date' => 'getAllocationDate',
        'shipped_date' => 'getShippedDate',
        'source' => 'getSource',
        'mpd_carrier_service_name' => 'getMpdCarrierServiceName',
        'mpd_carrier_service_group_name' => 'getMpdCarrierServiceGroupName',
        'mpd_carrier_service_group_reference' => 'getMpdCarrierServiceGroupReference',
        'destination_address_line1' => 'getDestinationAddressLine1',
        'destination_address_town' => 'getDestinationAddressTown',
        'destination_address_postcode' => 'getDestinationAddressPostcode',
        'destination_address_country' => 'getDestinationAddressCountry',
        'destination_shipping_location_reference' => 'getDestinationShippingLocationReference'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['reference'] = isset($data['reference']) ? $data['reference'] : null;
        $this->container['consignment_reference_provided_by_customer'] = isset($data['consignment_reference_provided_by_customer']) ? $data['consignment_reference_provided_by_customer'] : null;
        $this->container['date_created'] = isset($data['date_created']) ? $data['date_created'] : null;
        $this->container['state'] = isset($data['state']) ? $data['state'] : null;
        $this->container['shipping_date'] = isset($data['shipping_date']) ? $data['shipping_date'] : null;
        $this->container['mpd_carrier_reference'] = isset($data['mpd_carrier_reference']) ? $data['mpd_carrier_reference'] : null;
        $this->container['mpd_carrier_service_reference'] = isset($data['mpd_carrier_service_reference']) ? $data['mpd_carrier_service_reference'] : null;
        $this->container['allocation_date'] = isset($data['allocation_date']) ? $data['allocation_date'] : null;
        $this->container['shipped_date'] = isset($data['shipped_date']) ? $data['shipped_date'] : null;
        $this->container['source'] = isset($data['source']) ? $data['source'] : null;
        $this->container['mpd_carrier_service_name'] = isset($data['mpd_carrier_service_name']) ? $data['mpd_carrier_service_name'] : null;
        $this->container['mpd_carrier_service_group_name'] = isset($data['mpd_carrier_service_group_name']) ? $data['mpd_carrier_service_group_name'] : null;
        $this->container['mpd_carrier_service_group_reference'] = isset($data['mpd_carrier_service_group_reference']) ? $data['mpd_carrier_service_group_reference'] : null;
        $this->container['destination_address_line1'] = isset($data['destination_address_line1']) ? $data['destination_address_line1'] : null;
        $this->container['destination_address_town'] = isset($data['destination_address_town']) ? $data['destination_address_town'] : null;
        $this->container['destination_address_postcode'] = isset($data['destination_address_postcode']) ? $data['destination_address_postcode'] : null;
        $this->container['destination_address_country'] = isset($data['destination_address_country']) ? $data['destination_address_country'] : null;
        $this->container['destination_shipping_location_reference'] = isset($data['destination_shipping_location_reference']) ? $data['destination_shipping_location_reference'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets reference
     *
     * @return string
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string $reference reference
     *
     * @return $this
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets consignment_reference_provided_by_customer
     *
     * @return string
     */
    public function getConsignmentReferenceProvidedByCustomer()
    {
        return $this->container['consignment_reference_provided_by_customer'];
    }

    /**
     * Sets consignment_reference_provided_by_customer
     *
     * @param string $consignment_reference_provided_by_customer consignment_reference_provided_by_customer
     *
     * @return $this
     */
    public function setConsignmentReferenceProvidedByCustomer($consignment_reference_provided_by_customer)
    {
        $this->container['consignment_reference_provided_by_customer'] = $consignment_reference_provided_by_customer;

        return $this;
    }

    /**
     * Gets date_created
     *
     * @return \DateTime
     */
    public function getDateCreated()
    {
        return $this->container['date_created'];
    }

    /**
     * Sets date_created
     *
     * @param \DateTime $date_created date_created
     *
     * @return $this
     */
    public function setDateCreated($date_created)
    {
        $this->container['date_created'] = $date_created;

        return $this;
    }

    /**
     * Gets state
     *
     * @return string
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param string $state state
     *
     * @return $this
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets shipping_date
     *
     * @return \DateTime
     */
    public function getShippingDate()
    {
        return $this->container['shipping_date'];
    }

    /**
     * Sets shipping_date
     *
     * @param \DateTime $shipping_date shipping_date
     *
     * @return $this
     */
    public function setShippingDate($shipping_date)
    {
        $this->container['shipping_date'] = $shipping_date;

        return $this;
    }

    /**
     * Gets mpd_carrier_reference
     *
     * @return string
     */
    public function getMpdCarrierReference()
    {
        return $this->container['mpd_carrier_reference'];
    }

    /**
     * Sets mpd_carrier_reference
     *
     * @param string $mpd_carrier_reference mpd_carrier_reference
     *
     * @return $this
     */
    public function setMpdCarrierReference($mpd_carrier_reference)
    {
        $this->container['mpd_carrier_reference'] = $mpd_carrier_reference;

        return $this;
    }

    /**
     * Gets mpd_carrier_service_reference
     *
     * @return string
     */
    public function getMpdCarrierServiceReference()
    {
        return $this->container['mpd_carrier_service_reference'];
    }

    /**
     * Sets mpd_carrier_service_reference
     *
     * @param string $mpd_carrier_service_reference mpd_carrier_service_reference
     *
     * @return $this
     */
    public function setMpdCarrierServiceReference($mpd_carrier_service_reference)
    {
        $this->container['mpd_carrier_service_reference'] = $mpd_carrier_service_reference;

        return $this;
    }

    /**
     * Gets allocation_date
     *
     * @return \DateTime
     */
    public function getAllocationDate()
    {
        return $this->container['allocation_date'];
    }

    /**
     * Sets allocation_date
     *
     * @param \DateTime $allocation_date allocation_date
     *
     * @return $this
     */
    public function setAllocationDate($allocation_date)
    {
        $this->container['allocation_date'] = $allocation_date;

        return $this;
    }

    /**
     * Gets shipped_date
     *
     * @return \DateTime
     */
    public function getShippedDate()
    {
        return $this->container['shipped_date'];
    }

    /**
     * Sets shipped_date
     *
     * @param \DateTime $shipped_date shipped_date
     *
     * @return $this
     */
    public function setShippedDate($shipped_date)
    {
        $this->container['shipped_date'] = $shipped_date;

        return $this;
    }

    /**
     * Gets source
     *
     * @return string
     */
    public function getSource()
    {
        return $this->container['source'];
    }

    /**
     * Sets source
     *
     * @param string $source source
     *
     * @return $this
     */
    public function setSource($source)
    {
        $this->container['source'] = $source;

        return $this;
    }

    /**
     * Gets mpd_carrier_service_name
     *
     * @return string
     */
    public function getMpdCarrierServiceName()
    {
        return $this->container['mpd_carrier_service_name'];
    }

    /**
     * Sets mpd_carrier_service_name
     *
     * @param string $mpd_carrier_service_name mpd_carrier_service_name
     *
     * @return $this
     */
    public function setMpdCarrierServiceName($mpd_carrier_service_name)
    {
        $this->container['mpd_carrier_service_name'] = $mpd_carrier_service_name;

        return $this;
    }

    /**
     * Gets mpd_carrier_service_group_name
     *
     * @return string
     */
    public function getMpdCarrierServiceGroupName()
    {
        return $this->container['mpd_carrier_service_group_name'];
    }

    /**
     * Sets mpd_carrier_service_group_name
     *
     * @param string $mpd_carrier_service_group_name mpd_carrier_service_group_name
     *
     * @return $this
     */
    public function setMpdCarrierServiceGroupName($mpd_carrier_service_group_name)
    {
        $this->container['mpd_carrier_service_group_name'] = $mpd_carrier_service_group_name;

        return $this;
    }

    /**
     * Gets mpd_carrier_service_group_reference
     *
     * @return string
     */
    public function getMpdCarrierServiceGroupReference()
    {
        return $this->container['mpd_carrier_service_group_reference'];
    }

    /**
     * Sets mpd_carrier_service_group_reference
     *
     * @param string $mpd_carrier_service_group_reference mpd_carrier_service_group_reference
     *
     * @return $this
     */
    public function setMpdCarrierServiceGroupReference($mpd_carrier_service_group_reference)
    {
        $this->container['mpd_carrier_service_group_reference'] = $mpd_carrier_service_group_reference;

        return $this;
    }

    /**
     * Gets destination_address_line1
     *
     * @return string
     */
    public function getDestinationAddressLine1()
    {
        return $this->container['destination_address_line1'];
    }

    /**
     * Sets destination_address_line1
     *
     * @param string $destination_address_line1 destination_address_line1
     *
     * @return $this
     */
    public function setDestinationAddressLine1($destination_address_line1)
    {
        $this->container['destination_address_line1'] = $destination_address_line1;

        return $this;
    }

    /**
     * Gets destination_address_town
     *
     * @return string
     */
    public function getDestinationAddressTown()
    {
        return $this->container['destination_address_town'];
    }

    /**
     * Sets destination_address_town
     *
     * @param string $destination_address_town destination_address_town
     *
     * @return $this
     */
    public function setDestinationAddressTown($destination_address_town)
    {
        $this->container['destination_address_town'] = $destination_address_town;

        return $this;
    }

    /**
     * Gets destination_address_postcode
     *
     * @return string
     */
    public function getDestinationAddressPostcode()
    {
        return $this->container['destination_address_postcode'];
    }

    /**
     * Sets destination_address_postcode
     *
     * @param string $destination_address_postcode destination_address_postcode
     *
     * @return $this
     */
    public function setDestinationAddressPostcode($destination_address_postcode)
    {
        $this->container['destination_address_postcode'] = $destination_address_postcode;

        return $this;
    }

    /**
     * Gets destination_address_country
     *
     * @return string
     */
    public function getDestinationAddressCountry()
    {
        return $this->container['destination_address_country'];
    }

    /**
     * Sets destination_address_country
     *
     * @param string $destination_address_country destination_address_country
     *
     * @return $this
     */
    public function setDestinationAddressCountry($destination_address_country)
    {
        $this->container['destination_address_country'] = $destination_address_country;

        return $this;
    }

    /**
     * Gets destination_shipping_location_reference
     *
     * @return string
     */
    public function getDestinationShippingLocationReference()
    {
        return $this->container['destination_shipping_location_reference'];
    }

    /**
     * Sets destination_shipping_location_reference
     *
     * @param string $destination_shipping_location_reference destination_shipping_location_reference
     *
     * @return $this
     */
    public function setDestinationShippingLocationReference($destination_shipping_location_reference)
    {
        $this->container['destination_shipping_location_reference'] = $destination_shipping_location_reference;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


