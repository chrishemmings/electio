<?php
/**
 * Quote
 *
 * PHP version 5
 *
 * @category Class
 * @package  ChrisHemmings\Electio
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Electio API
 *
 * A minimal Electio client
 *
 * OpenAPI spec version: 1.0.5
 * Contact: chris@hemmin.gs
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.17
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace ChrisHemmings\Electio\Client\Model;

use \ArrayAccess;
use \ChrisHemmings\Electio\ObjectSerializer;

/**
 * Quote Class Doc Comment
 *
 * @category Class
 * @package  ChrisHemmings\Electio
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Quote implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Quote';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'quote_reference' => 'string',
        'requestor' => 'string',
        'creation_date' => '\DateTime',
        'expiry_date' => '\DateTime',
        'consignment_reference' => 'string',
        'consignment_reference_provided_by_customer' => 'string',
        'mpd_carrier_service_reference' => 'string',
        'mpd_carrier_service_source' => 'string',
        'mpd_carrier_service' => 'string',
        'carrier_reference' => 'string',
        'origin_address' => '\ChrisHemmings\Electio\Client\Model\Address',
        'destination_address' => '\ChrisHemmings\Electio\Client\Model\Address',
        'collection_date' => '\DateTime',
        'earliest_delivery_date' => '\DateTime',
        'latest_delivery_date' => '\DateTime',
        'base_price' => '\ChrisHemmings\Electio\Client\Model\Rate',
        'price' => '\ChrisHemmings\Electio\Client\Model\Rate',
        'carrier_account_owner' => 'string',
        'is_electio_service' => 'bool',
        'service_direction' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'quote_reference' => null,
        'requestor' => null,
        'creation_date' => 'date-time',
        'expiry_date' => 'date-time',
        'consignment_reference' => null,
        'consignment_reference_provided_by_customer' => null,
        'mpd_carrier_service_reference' => null,
        'mpd_carrier_service_source' => null,
        'mpd_carrier_service' => null,
        'carrier_reference' => null,
        'origin_address' => null,
        'destination_address' => null,
        'collection_date' => 'date-time',
        'earliest_delivery_date' => 'date-time',
        'latest_delivery_date' => 'date-time',
        'base_price' => null,
        'price' => null,
        'carrier_account_owner' => null,
        'is_electio_service' => null,
        'service_direction' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'quote_reference' => 'QuoteReference',
        'requestor' => 'Requestor',
        'creation_date' => 'CreationDate',
        'expiry_date' => 'ExpiryDate',
        'consignment_reference' => 'ConsignmentReference',
        'consignment_reference_provided_by_customer' => 'ConsignmentReferenceProvidedByCustomer',
        'mpd_carrier_service_reference' => 'MpdCarrierServiceReference',
        'mpd_carrier_service_source' => 'MpdCarrierServiceSource',
        'mpd_carrier_service' => 'MpdCarrierService',
        'carrier_reference' => 'CarrierReference',
        'origin_address' => 'OriginAddress',
        'destination_address' => 'DestinationAddress',
        'collection_date' => 'CollectionDate',
        'earliest_delivery_date' => 'EarliestDeliveryDate',
        'latest_delivery_date' => 'LatestDeliveryDate',
        'base_price' => 'BasePrice',
        'price' => 'Price',
        'carrier_account_owner' => 'CarrierAccountOwner',
        'is_electio_service' => 'IsElectioService',
        'service_direction' => 'ServiceDirection'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'quote_reference' => 'setQuoteReference',
        'requestor' => 'setRequestor',
        'creation_date' => 'setCreationDate',
        'expiry_date' => 'setExpiryDate',
        'consignment_reference' => 'setConsignmentReference',
        'consignment_reference_provided_by_customer' => 'setConsignmentReferenceProvidedByCustomer',
        'mpd_carrier_service_reference' => 'setMpdCarrierServiceReference',
        'mpd_carrier_service_source' => 'setMpdCarrierServiceSource',
        'mpd_carrier_service' => 'setMpdCarrierService',
        'carrier_reference' => 'setCarrierReference',
        'origin_address' => 'setOriginAddress',
        'destination_address' => 'setDestinationAddress',
        'collection_date' => 'setCollectionDate',
        'earliest_delivery_date' => 'setEarliestDeliveryDate',
        'latest_delivery_date' => 'setLatestDeliveryDate',
        'base_price' => 'setBasePrice',
        'price' => 'setPrice',
        'carrier_account_owner' => 'setCarrierAccountOwner',
        'is_electio_service' => 'setIsElectioService',
        'service_direction' => 'setServiceDirection'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'quote_reference' => 'getQuoteReference',
        'requestor' => 'getRequestor',
        'creation_date' => 'getCreationDate',
        'expiry_date' => 'getExpiryDate',
        'consignment_reference' => 'getConsignmentReference',
        'consignment_reference_provided_by_customer' => 'getConsignmentReferenceProvidedByCustomer',
        'mpd_carrier_service_reference' => 'getMpdCarrierServiceReference',
        'mpd_carrier_service_source' => 'getMpdCarrierServiceSource',
        'mpd_carrier_service' => 'getMpdCarrierService',
        'carrier_reference' => 'getCarrierReference',
        'origin_address' => 'getOriginAddress',
        'destination_address' => 'getDestinationAddress',
        'collection_date' => 'getCollectionDate',
        'earliest_delivery_date' => 'getEarliestDeliveryDate',
        'latest_delivery_date' => 'getLatestDeliveryDate',
        'base_price' => 'getBasePrice',
        'price' => 'getPrice',
        'carrier_account_owner' => 'getCarrierAccountOwner',
        'is_electio_service' => 'getIsElectioService',
        'service_direction' => 'getServiceDirection'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['quote_reference'] = isset($data['quote_reference']) ? $data['quote_reference'] : null;
        $this->container['requestor'] = isset($data['requestor']) ? $data['requestor'] : null;
        $this->container['creation_date'] = isset($data['creation_date']) ? $data['creation_date'] : null;
        $this->container['expiry_date'] = isset($data['expiry_date']) ? $data['expiry_date'] : null;
        $this->container['consignment_reference'] = isset($data['consignment_reference']) ? $data['consignment_reference'] : null;
        $this->container['consignment_reference_provided_by_customer'] = isset($data['consignment_reference_provided_by_customer']) ? $data['consignment_reference_provided_by_customer'] : null;
        $this->container['mpd_carrier_service_reference'] = isset($data['mpd_carrier_service_reference']) ? $data['mpd_carrier_service_reference'] : null;
        $this->container['mpd_carrier_service_source'] = isset($data['mpd_carrier_service_source']) ? $data['mpd_carrier_service_source'] : null;
        $this->container['mpd_carrier_service'] = isset($data['mpd_carrier_service']) ? $data['mpd_carrier_service'] : null;
        $this->container['carrier_reference'] = isset($data['carrier_reference']) ? $data['carrier_reference'] : null;
        $this->container['origin_address'] = isset($data['origin_address']) ? $data['origin_address'] : null;
        $this->container['destination_address'] = isset($data['destination_address']) ? $data['destination_address'] : null;
        $this->container['collection_date'] = isset($data['collection_date']) ? $data['collection_date'] : null;
        $this->container['earliest_delivery_date'] = isset($data['earliest_delivery_date']) ? $data['earliest_delivery_date'] : null;
        $this->container['latest_delivery_date'] = isset($data['latest_delivery_date']) ? $data['latest_delivery_date'] : null;
        $this->container['base_price'] = isset($data['base_price']) ? $data['base_price'] : null;
        $this->container['price'] = isset($data['price']) ? $data['price'] : null;
        $this->container['carrier_account_owner'] = isset($data['carrier_account_owner']) ? $data['carrier_account_owner'] : null;
        $this->container['is_electio_service'] = isset($data['is_electio_service']) ? $data['is_electio_service'] : null;
        $this->container['service_direction'] = isset($data['service_direction']) ? $data['service_direction'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets quote_reference
     *
     * @return string
     */
    public function getQuoteReference()
    {
        return $this->container['quote_reference'];
    }

    /**
     * Sets quote_reference
     *
     * @param string $quote_reference quote_reference
     *
     * @return $this
     */
    public function setQuoteReference($quote_reference)
    {
        $this->container['quote_reference'] = $quote_reference;

        return $this;
    }

    /**
     * Gets requestor
     *
     * @return string
     */
    public function getRequestor()
    {
        return $this->container['requestor'];
    }

    /**
     * Sets requestor
     *
     * @param string $requestor requestor
     *
     * @return $this
     */
    public function setRequestor($requestor)
    {
        $this->container['requestor'] = $requestor;

        return $this;
    }

    /**
     * Gets creation_date
     *
     * @return \DateTime
     */
    public function getCreationDate()
    {
        return $this->container['creation_date'];
    }

    /**
     * Sets creation_date
     *
     * @param \DateTime $creation_date creation_date
     *
     * @return $this
     */
    public function setCreationDate($creation_date)
    {
        $this->container['creation_date'] = $creation_date;

        return $this;
    }

    /**
     * Gets expiry_date
     *
     * @return \DateTime
     */
    public function getExpiryDate()
    {
        return $this->container['expiry_date'];
    }

    /**
     * Sets expiry_date
     *
     * @param \DateTime $expiry_date expiry_date
     *
     * @return $this
     */
    public function setExpiryDate($expiry_date)
    {
        $this->container['expiry_date'] = $expiry_date;

        return $this;
    }

    /**
     * Gets consignment_reference
     *
     * @return string
     */
    public function getConsignmentReference()
    {
        return $this->container['consignment_reference'];
    }

    /**
     * Sets consignment_reference
     *
     * @param string $consignment_reference consignment_reference
     *
     * @return $this
     */
    public function setConsignmentReference($consignment_reference)
    {
        $this->container['consignment_reference'] = $consignment_reference;

        return $this;
    }

    /**
     * Gets consignment_reference_provided_by_customer
     *
     * @return string
     */
    public function getConsignmentReferenceProvidedByCustomer()
    {
        return $this->container['consignment_reference_provided_by_customer'];
    }

    /**
     * Sets consignment_reference_provided_by_customer
     *
     * @param string $consignment_reference_provided_by_customer consignment_reference_provided_by_customer
     *
     * @return $this
     */
    public function setConsignmentReferenceProvidedByCustomer($consignment_reference_provided_by_customer)
    {
        $this->container['consignment_reference_provided_by_customer'] = $consignment_reference_provided_by_customer;

        return $this;
    }

    /**
     * Gets mpd_carrier_service_reference
     *
     * @return string
     */
    public function getMpdCarrierServiceReference()
    {
        return $this->container['mpd_carrier_service_reference'];
    }

    /**
     * Sets mpd_carrier_service_reference
     *
     * @param string $mpd_carrier_service_reference mpd_carrier_service_reference
     *
     * @return $this
     */
    public function setMpdCarrierServiceReference($mpd_carrier_service_reference)
    {
        $this->container['mpd_carrier_service_reference'] = $mpd_carrier_service_reference;

        return $this;
    }

    /**
     * Gets mpd_carrier_service_source
     *
     * @return string
     */
    public function getMpdCarrierServiceSource()
    {
        return $this->container['mpd_carrier_service_source'];
    }

    /**
     * Sets mpd_carrier_service_source
     *
     * @param string $mpd_carrier_service_source mpd_carrier_service_source
     *
     * @return $this
     */
    public function setMpdCarrierServiceSource($mpd_carrier_service_source)
    {
        $this->container['mpd_carrier_service_source'] = $mpd_carrier_service_source;

        return $this;
    }

    /**
     * Gets mpd_carrier_service
     *
     * @return string
     */
    public function getMpdCarrierService()
    {
        return $this->container['mpd_carrier_service'];
    }

    /**
     * Sets mpd_carrier_service
     *
     * @param string $mpd_carrier_service mpd_carrier_service
     *
     * @return $this
     */
    public function setMpdCarrierService($mpd_carrier_service)
    {
        $this->container['mpd_carrier_service'] = $mpd_carrier_service;

        return $this;
    }

    /**
     * Gets carrier_reference
     *
     * @return string
     */
    public function getCarrierReference()
    {
        return $this->container['carrier_reference'];
    }

    /**
     * Sets carrier_reference
     *
     * @param string $carrier_reference carrier_reference
     *
     * @return $this
     */
    public function setCarrierReference($carrier_reference)
    {
        $this->container['carrier_reference'] = $carrier_reference;

        return $this;
    }

    /**
     * Gets origin_address
     *
     * @return \ChrisHemmings\Electio\Client\Model\Address
     */
    public function getOriginAddress()
    {
        return $this->container['origin_address'];
    }

    /**
     * Sets origin_address
     *
     * @param \ChrisHemmings\Electio\Client\Model\Address $origin_address origin_address
     *
     * @return $this
     */
    public function setOriginAddress($origin_address)
    {
        $this->container['origin_address'] = $origin_address;

        return $this;
    }

    /**
     * Gets destination_address
     *
     * @return \ChrisHemmings\Electio\Client\Model\Address
     */
    public function getDestinationAddress()
    {
        return $this->container['destination_address'];
    }

    /**
     * Sets destination_address
     *
     * @param \ChrisHemmings\Electio\Client\Model\Address $destination_address destination_address
     *
     * @return $this
     */
    public function setDestinationAddress($destination_address)
    {
        $this->container['destination_address'] = $destination_address;

        return $this;
    }

    /**
     * Gets collection_date
     *
     * @return \DateTime
     */
    public function getCollectionDate()
    {
        return $this->container['collection_date'];
    }

    /**
     * Sets collection_date
     *
     * @param \DateTime $collection_date collection_date
     *
     * @return $this
     */
    public function setCollectionDate($collection_date)
    {
        $this->container['collection_date'] = $collection_date;

        return $this;
    }

    /**
     * Gets earliest_delivery_date
     *
     * @return \DateTime
     */
    public function getEarliestDeliveryDate()
    {
        return $this->container['earliest_delivery_date'];
    }

    /**
     * Sets earliest_delivery_date
     *
     * @param \DateTime $earliest_delivery_date earliest_delivery_date
     *
     * @return $this
     */
    public function setEarliestDeliveryDate($earliest_delivery_date)
    {
        $this->container['earliest_delivery_date'] = $earliest_delivery_date;

        return $this;
    }

    /**
     * Gets latest_delivery_date
     *
     * @return \DateTime
     */
    public function getLatestDeliveryDate()
    {
        return $this->container['latest_delivery_date'];
    }

    /**
     * Sets latest_delivery_date
     *
     * @param \DateTime $latest_delivery_date latest_delivery_date
     *
     * @return $this
     */
    public function setLatestDeliveryDate($latest_delivery_date)
    {
        $this->container['latest_delivery_date'] = $latest_delivery_date;

        return $this;
    }

    /**
     * Gets base_price
     *
     * @return \ChrisHemmings\Electio\Client\Model\Rate
     */
    public function getBasePrice()
    {
        return $this->container['base_price'];
    }

    /**
     * Sets base_price
     *
     * @param \ChrisHemmings\Electio\Client\Model\Rate $base_price base_price
     *
     * @return $this
     */
    public function setBasePrice($base_price)
    {
        $this->container['base_price'] = $base_price;

        return $this;
    }

    /**
     * Gets price
     *
     * @return \ChrisHemmings\Electio\Client\Model\Rate
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param \ChrisHemmings\Electio\Client\Model\Rate $price price
     *
     * @return $this
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets carrier_account_owner
     *
     * @return string
     */
    public function getCarrierAccountOwner()
    {
        return $this->container['carrier_account_owner'];
    }

    /**
     * Sets carrier_account_owner
     *
     * @param string $carrier_account_owner carrier_account_owner
     *
     * @return $this
     */
    public function setCarrierAccountOwner($carrier_account_owner)
    {
        $this->container['carrier_account_owner'] = $carrier_account_owner;

        return $this;
    }

    /**
     * Gets is_electio_service
     *
     * @return bool
     */
    public function getIsElectioService()
    {
        return $this->container['is_electio_service'];
    }

    /**
     * Sets is_electio_service
     *
     * @param bool $is_electio_service is_electio_service
     *
     * @return $this
     */
    public function setIsElectioService($is_electio_service)
    {
        $this->container['is_electio_service'] = $is_electio_service;

        return $this;
    }

    /**
     * Gets service_direction
     *
     * @return string
     */
    public function getServiceDirection()
    {
        return $this->container['service_direction'];
    }

    /**
     * Sets service_direction
     *
     * @param string $service_direction service_direction
     *
     * @return $this
     */
    public function setServiceDirection($service_direction)
    {
        $this->container['service_direction'] = $service_direction;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


